#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dc_Database")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertdc_user(dc_user instance);
  partial void Updatedc_user(dc_user instance);
  partial void Deletedc_user(dc_user instance);
  partial void Insertdc_article(dc_article instance);
  partial void Updatedc_article(dc_article instance);
  partial void Deletedc_article(dc_article instance);
  partial void Insertdc_article_tag(dc_article_tag instance);
  partial void Updatedc_article_tag(dc_article_tag instance);
  partial void Deletedc_article_tag(dc_article_tag instance);
  partial void Insertdc_settings(dc_settings instance);
  partial void Updatedc_settings(dc_settings instance);
  partial void Deletedc_settings(dc_settings instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dc_DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<dc_user> dc_user
	{
		get
		{
			return this.GetTable<dc_user>();
		}
	}
	
	public System.Data.Linq.Table<dc_article> dc_article
	{
		get
		{
			return this.GetTable<dc_article>();
		}
	}
	
	public System.Data.Linq.Table<dc_article_tag> dc_article_tag
	{
		get
		{
			return this.GetTable<dc_article_tag>();
		}
	}
	
	public System.Data.Linq.Table<dc_settings> dc_settings
	{
		get
		{
			return this.GetTable<dc_settings>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dc_user")]
public partial class dc_user : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _uid;
	
	private string _uname;
	
	private string _upassword;
	
	private System.Nullable<int> _gid;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    partial void OnunameChanging(string value);
    partial void OnunameChanged();
    partial void OnupasswordChanging(string value);
    partial void OnupasswordChanged();
    partial void OngidChanging(System.Nullable<int> value);
    partial void OngidChanged();
    #endregion
	
	public dc_user()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int uid
	{
		get
		{
			return this._uid;
		}
		set
		{
			if ((this._uid != value))
			{
				this.OnuidChanging(value);
				this.SendPropertyChanging();
				this._uid = value;
				this.SendPropertyChanged("uid");
				this.OnuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uname", DbType="NVarChar(50)")]
	public string uname
	{
		get
		{
			return this._uname;
		}
		set
		{
			if ((this._uname != value))
			{
				this.OnunameChanging(value);
				this.SendPropertyChanging();
				this._uname = value;
				this.SendPropertyChanged("uname");
				this.OnunameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upassword", DbType="NVarChar(50)")]
	public string upassword
	{
		get
		{
			return this._upassword;
		}
		set
		{
			if ((this._upassword != value))
			{
				this.OnupasswordChanging(value);
				this.SendPropertyChanging();
				this._upassword = value;
				this.SendPropertyChanged("upassword");
				this.OnupasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gid", DbType="Int")]
	public System.Nullable<int> gid
	{
		get
		{
			return this._gid;
		}
		set
		{
			if ((this._gid != value))
			{
				this.OngidChanging(value);
				this.SendPropertyChanging();
				this._gid = value;
				this.SendPropertyChanged("gid");
				this.OngidChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dc_article")]
public partial class dc_article : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _title;
	
	private System.Nullable<System.DateTime> _time_commit;
	
	private System.Nullable<System.DateTime> _time_update;
	
	private string _author;
	
	private string _article_intro;
	
	private string _article_context;
	
	private System.Nullable<int> _article_tag_id;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Ontime_commitChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_commitChanged();
    partial void Ontime_updateChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_updateChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void Onarticle_introChanging(string value);
    partial void Onarticle_introChanged();
    partial void Onarticle_contextChanging(string value);
    partial void Onarticle_contextChanged();
    partial void Onarticle_tag_idChanging(System.Nullable<int> value);
    partial void Onarticle_tag_idChanged();
    #endregion
	
	public dc_article()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_commit", DbType="DateTime")]
	public System.Nullable<System.DateTime> time_commit
	{
		get
		{
			return this._time_commit;
		}
		set
		{
			if ((this._time_commit != value))
			{
				this.Ontime_commitChanging(value);
				this.SendPropertyChanging();
				this._time_commit = value;
				this.SendPropertyChanged("time_commit");
				this.Ontime_commitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_update", DbType="DateTime")]
	public System.Nullable<System.DateTime> time_update
	{
		get
		{
			return this._time_update;
		}
		set
		{
			if ((this._time_update != value))
			{
				this.Ontime_updateChanging(value);
				this.SendPropertyChanging();
				this._time_update = value;
				this.SendPropertyChanged("time_update");
				this.Ontime_updateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="NVarChar(50)")]
	public string author
	{
		get
		{
			return this._author;
		}
		set
		{
			if ((this._author != value))
			{
				this.OnauthorChanging(value);
				this.SendPropertyChanging();
				this._author = value;
				this.SendPropertyChanged("author");
				this.OnauthorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_intro", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string article_intro
	{
		get
		{
			return this._article_intro;
		}
		set
		{
			if ((this._article_intro != value))
			{
				this.Onarticle_introChanging(value);
				this.SendPropertyChanging();
				this._article_intro = value;
				this.SendPropertyChanged("article_intro");
				this.Onarticle_introChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_context", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string article_context
	{
		get
		{
			return this._article_context;
		}
		set
		{
			if ((this._article_context != value))
			{
				this.Onarticle_contextChanging(value);
				this.SendPropertyChanging();
				this._article_context = value;
				this.SendPropertyChanged("article_context");
				this.Onarticle_contextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_tag_id", DbType="Int")]
	public System.Nullable<int> article_tag_id
	{
		get
		{
			return this._article_tag_id;
		}
		set
		{
			if ((this._article_tag_id != value))
			{
				this.Onarticle_tag_idChanging(value);
				this.SendPropertyChanging();
				this._article_tag_id = value;
				this.SendPropertyChanged("article_tag_id");
				this.Onarticle_tag_idChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dc_article_tag")]
public partial class dc_article_tag : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _article_tag_name;
	
	private string _article_tag_intro;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onarticle_tag_nameChanging(string value);
    partial void Onarticle_tag_nameChanged();
    partial void Onarticle_tag_introChanging(string value);
    partial void Onarticle_tag_introChanged();
    #endregion
	
	public dc_article_tag()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_tag_name", DbType="NVarChar(50)")]
	public string article_tag_name
	{
		get
		{
			return this._article_tag_name;
		}
		set
		{
			if ((this._article_tag_name != value))
			{
				this.Onarticle_tag_nameChanging(value);
				this.SendPropertyChanging();
				this._article_tag_name = value;
				this.SendPropertyChanged("article_tag_name");
				this.Onarticle_tag_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_article_tag_intro", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string article_tag_intro
	{
		get
		{
			return this._article_tag_intro;
		}
		set
		{
			if ((this._article_tag_intro != value))
			{
				this.Onarticle_tag_introChanging(value);
				this.SendPropertyChanging();
				this._article_tag_intro = value;
				this.SendPropertyChanged("article_tag_intro");
				this.Onarticle_tag_introChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dc_settings")]
public partial class dc_settings : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _set_title;
	
	private string _set_value;
	
	private string _set_intro;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onset_titleChanging(string value);
    partial void Onset_titleChanged();
    partial void Onset_valueChanging(string value);
    partial void Onset_valueChanged();
    partial void Onset_introChanging(string value);
    partial void Onset_introChanged();
    #endregion
	
	public dc_settings()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_set_title", DbType="NVarChar(50)")]
	public string set_title
	{
		get
		{
			return this._set_title;
		}
		set
		{
			if ((this._set_title != value))
			{
				this.Onset_titleChanging(value);
				this.SendPropertyChanging();
				this._set_title = value;
				this.SendPropertyChanged("set_title");
				this.Onset_titleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_set_value", DbType="NVarChar(50)")]
	public string set_value
	{
		get
		{
			return this._set_value;
		}
		set
		{
			if ((this._set_value != value))
			{
				this.Onset_valueChanging(value);
				this.SendPropertyChanging();
				this._set_value = value;
				this.SendPropertyChanged("set_value");
				this.Onset_valueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_set_intro", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string set_intro
	{
		get
		{
			return this._set_intro;
		}
		set
		{
			if ((this._set_intro != value))
			{
				this.Onset_introChanging(value);
				this.SendPropertyChanging();
				this._set_intro = value;
				this.SendPropertyChanged("set_intro");
				this.Onset_introChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
